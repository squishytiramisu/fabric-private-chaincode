# Copyright 2020 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

CMAKE_MINIMUM_REQUIRED(VERSION 3.2 FATAL_ERROR)

SET(ENCLAVE_NAME test_enclave)
PROJECT(${ENCLAVE_NAME} C CXX)

add_definitions(-DENCLAVE_CODE)

FILE(GLOB ENCLAVE_HEADERS *.h)
FILE(GLOB ENCLAVE_EDL *.edl)
FILE(GLOB ENCLAVE_CONFIG *.xml)
FILE(GLOB ENCLAVE_LDS *.lds)
FILE(GLOB ENCLAVE_SOURCES 
    *.cpp
    $ENV{FPC_PATH}/common/utils.c
    )

SGX_EDGE_TRUSTED(${ENCLAVE_EDL} ENCLAVE_EDGE_SOURCES)
SET(ENCLAVE_EDL ${ENCLAVE_EDL} PARENT_SCOPE)

ADD_LIBRARY(${ENCLAVE_NAME} SHARED ${ENCLAVE_HEADERS} ${ENCLAVE_SOURCES} ${ENCLAVE_EDGE_SOURCES} ${ENCLAVE_EDL})
ADD_DEPENDENCIES(${ENCLAVE_NAME} ${T_CRYPTO_LIB_NAME})

TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC  ${SGX_SSL}/include)
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC $ENV{FPC_PATH}/common/) 
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC $ENV{FPC_PATH}/common/crypto) 
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC ${LOGGING_PATH}/trusted)

TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE ${COMMON_CXX_FLAGS})
TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE -nostdinc)
TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE -nostdinc++)

TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--no-undefined)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nostdlib)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nodefaultlibs)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nostartfiles)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-Bstatic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-Bsymbolic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--no-undefined)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-pie,-eenclave_entry)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--export-dynamic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--defsym,__ImageBase=0)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--version-script=${ENCLAVE_LDS})
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-L,${SGX_SDK}/lib64)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-L,${SGX_SSL}/lib64)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-L,${PDO_TOP_DIR}/common/build)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--whole-archive -lsgx_tsgxssl -Wl,--no-whole-archive)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--whole-archive -l${TRTS_LIBRARY_NAME} -Wl,--no-whole-archive)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--start-group ${T_LOGGING_LIB_NAME} ${T_CRYPTO_LIB_NAME} ${T_CRYPTO_ADAPT_LIB_NAME} sgx_tsgxssl_crypto sgx_tstdc sgx_tcxx sgx_tcrypto ${SERVICE_LIBRARY_NAME} -Wl,--end-group)
#TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} "${T_LOGGING_LIB_NAME}")

SET(ENCLAVE_SIGNING_KEY "${ENCLAVE_NAME}.sign.pem")
SGX_SIGN_ENCLAVE(${ENCLAVE_NAME} ${ENCLAVE_SIGNING_KEY} ${ENCLAVE_CONFIG})

ADD_CUSTOM_COMMAND(
    TARGET ${ENCLAVE_NAME}
    PRE_BUILD
    COMMAND openssl genrsa -3 -out ${ENCLAVE_SIGNING_KEY} 3072
    )

