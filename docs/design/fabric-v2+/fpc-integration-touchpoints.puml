/'
    Copyright 2020 Intel Corporation
    Copyright IBM Corp. All Rights Reserved.

    SPDX-License-Identifier: Apache-2.0
'/

@startuml

'- force wrapping of longer text
'skinparam wrapWidth 400

!pragma teoz true


title Fabric Private Chaincode Integration Touchpoints

actor	"Client\n(Org1)" as Client1
actor	"Client\n(Org2)" as Client2
entity	"Peer\n(Org1)" as Peer1
entity	"Peer\n(Org2)" as Peer2
entity ecc1
entity ecc2
database tlcc1
database tlcc2
entity	Orderer
'database Ledger

note over tlcc2
  "Full" FPC only (Post-MVP)
end note

group System setup

  Client1 -> Peer1 : start
  Client2 -> Peer2 : start

  Client1 -> Peer1 : channel create
    note over Client1
      Includes additional FPC metadata to genesis block (enclave registry, trusted ledger code-identity)
    end note

  Client1 -> Peer1 : channel join
  alt "Full" FPC (Post-MVP)
    Peer1 -> tlcc1 : start
    activate tlcc1
      note over tlcc1
        attach to channel
      end note
  end

  Client2 -> Peer2 : channel join
  alt "Full" FPC (Post-MVP)
    Peer2 -> tlcc2 : start
    activate tlcc2
  end

end


group Per FPC chaincode FCC

   Client1 -> Client1: chaincode package FPC
   note over Client1
     extend CC definition with additional meta-data
   end note
   Client2 -> Client2: chaincode package FPC
   
   Client1 -> Peer1: chaincode install FPC
   Client2 -> Peer2: chaincode install FPC

   Client1 -> Peer1 : chaincode approveformyorg FPC
   Client2 -> Peer2 : chaincode approveformyorg FPC

   Client1 -> Peer1 : chaincode commit FPC

   Client1 -> Peer1 : chaincode initEnclave FPC
   & Peer1 <-> ecc1 
   activate ecc1

   alt "full" FPC (Post-MVP)
      Client2 -> Peer2 : chaincode initEnclave FPC
      & Peer2 <-> ecc2 
      activate ecc2
      Client1 -> Peer1 : chaincode exportCCKeys FPC
      & Peer1 <-> ecc1 
      Client2 -> Peer2 : chaincode importCCKeys FPC
      & Peer2 <-> ecc2 
   end

   loop
     alt query
        Client1 -> Peer1 : chaincode invoke FPC
          note over Client1
            retrieve encryption-keys from enclave registry
          end note
          note over Peer1
            FPC-specific sgx-enabled docker-image with FPC-specific runtime & shim
          end note
        Peer1 -> ecc1
        alt "full" FPC (Post-MVP)
          ecc1 <-> tlcc1: inspect ledger state
            note over tlcc1
              any state must be validated via trusted ledger enclave
            end note
        end
        note over ecc1
  	      enclave signatures as (enclave) endorsement (of result)
        end note
        Peer1 <- ecc1
        & Client1 <- Peer1 : enclave signature & result

     else transactions
        Client1 -> Peer1 : chaincode invoke FPC
        & Peer1 -> ecc1
        alt "full" FPC (Post-MVP)
          ecc1 <-> tlcc1: inspect ledger state
        end
        note over ecc1
  	      rw-set (encrypted values, cleartext keys)
  	      enclave signatures as (enclave) endorsement (of result and transaction)
        end note
        Peer1 <- ecc1
        & Client1 <- Peer1 : endorsement Peer1, enclave signature & result

        alt FPC Lite
          Client1 -> Peer1 : chaincode invoke "validateEnclaveEndorsement"
            note over Peer1
  	          - Validate enclave signatures, enclave endorsement policies evaluated
                over enclave signatures, not peer signatures!
              - Re-execute rw-set
            end note
          Client1 <- Peer1 : validation endorsement Peer1
          Client1 -> Peer2 : chaincode invoke "validateEnclaveEndorsement"
          Client1 <- Peer2 : validation endorsement Peer2
          Client1 -> Orderer : {validation endorsement Peer1, validation endorsement Peer2}
          Peer1 <- Orderer : ordered {validation endorsement Peer1, validation endorsement Peer2}
          Peer2 <- Orderer : ordered {validation endorsement Peer1, validation endorsement Peer2}       
        else "full" FPC (Post-MVP)
          Client1 -> Orderer : {endorsement Peer1, endorsement Peer2}
          Peer1 <- Orderer : ordered {endorsement Peer1, endorsement Peer2}
            note over Peer1
  	          Validate enclave signatures, endorsement policies evaluated
              over enclave signatures, not peer signatures!
            end note
          Peer2 <- Orderer : ordered {endorsement Peer1, endorsement Peer2}
        end
     end
   end

end

@enduml
